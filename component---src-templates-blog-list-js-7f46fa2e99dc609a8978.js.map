{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./src/components/article-list.js"],"names":["BlogList","data","pageContext","currentPage","numPages","section","edges","posts","Array","from","length","_","i","key","to","postListQuery","ArticleList","isFirebase","map","node","href","fields","slug","css","rhythm","frontmatter","title","date","replace","by","excerpt"],"mappings":"0QAKe,SAASA,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC/BC,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAE/B,OACE,YAAC,IAAD,KACE,uBACE,YAAC,IAAD,CAAaC,MAAOL,EAAKM,MAAMD,QAC9BE,MAAMC,KAAK,CAAEC,OAAQN,IAAY,SAACO,EAAGC,GAAJ,OAChCA,EAAI,IAAMT,EACR,oBAAMU,IAAG,qBAAsBD,EAAI,IACjC,YAAC,IAAD,CACEE,GAAE,GAAKT,GAAgB,IAANO,EAAU,GAAKA,EAAI,IAEnCA,EAAI,GACC,KAGV,wBAAOA,EAAI,EAAI,UAQpB,IAAMG,EAAa,c,4UCzBX,SAASC,EAAT,GAA6C,IAAtBV,EAAqB,EAArBA,MACpC,OADyD,EAAdW,WAElCX,EAAMY,KAAI,WAAWN,GAAX,IAAGO,EAAH,EAAGA,KAAH,OACf,mBAAKN,IAAKD,GACR,iBACEQ,KAAMD,EAAKE,OAAOC,KAClBC,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBC,YAAO,EAAI,GAD3B,MAIFL,EAAKM,YAAYC,MAAO,IACzB,oBACEH,IAAG,GADL,KAKKJ,EAAKM,YAAYE,KAAKC,QAAQ,IAAK,MAGzCT,EAAKM,YAAYI,IAAM,4BAAQV,EAAKM,YAAYI,IACjD,qBAAIV,EAAKW,cAKRxB,EAAMY,KAAI,WAAWN,GAAX,IAAGO,EAAH,EAAGA,KAAH,OACf,mBAAKN,IAAKD,GACR,YAAC,IAAD,CACEE,GAAIK,EAAKE,OAAOC,KAChBC,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBC,YAAO,EAAI,GAD3B,MAIFL,EAAKM,YAAYC,MAAO,IACzB,oBACEH,IAAG,GADL,KAKKJ,EAAKM,YAAYE,KAAKC,QAAQ,IAAK,MAGzCT,EAAKM,YAAYI,IAAM,4BAAQV,EAAKM,YAAYI,IACjD,qBAAIV,EAAKW","file":"component---src-templates-blog-list-js-7f46fa2e99dc609a8978.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport ArticleList from \"../components/article-list\";\n\nexport default function BlogList({ data, pageContext }) {\n  const { currentPage, numPages, section } = pageContext;\n\n  return (\n    <Layout>\n      <div>\n        <ArticleList edges={data.posts.edges} />\n        {Array.from({ length: numPages }, (_, i) =>\n          i + 1 !== currentPage ? (\n            <span key={`pagination-number${i + 1}`}>\n              <Link\n                to={`${section}${i === 0 ? \"\" : i + 1}`}\n              >\n                {i + 1}\n              </Link>{\" \"}\n            </span>\n          ) : (\n            <span>{i + 1 + \" \"}</span>\n          )\n        )}\n      </div>\n    </Layout>\n  );\n}\n\nexport const postListQuery = graphql`\n  query postListQuery($skip: Int!, $limit: Int!, $section: String!) {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $section } }\n      sort: {fields: frontmatter___date, order: DESC}\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\n\nexport default function ArticleList({ edges, isFirebase }) {\n  if (isFirebase) {\n    return edges.map(({ node }, i) => (\n      <div key={i}>\n        <a\n          href={node.fields.slug}\n          css={css`\n            text-decoration: none;\n            color: inherit;\n          `}\n        >\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(1 / 4)};\n            `}\n          >\n            {node.frontmatter.title}{\" \"}\n            <span\n              css={css`\n                color: #555;\n              `}\n            >\n              — {node.frontmatter.date.replace(\",\", \"\")}\n            </span>\n          </h3>\n          {node.frontmatter.by && <p>By: {node.frontmatter.by}</p>}\n          <p>{node.excerpt}</p>\n        </a>\n      </div>\n    ));\n  } else {\n    return edges.map(({ node }, i) => (\n      <div key={i}>\n        <Link\n          to={node.fields.slug}\n          css={css`\n            text-decoration: none;\n            color: inherit;\n          `}\n        >\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(1 / 4)};\n            `}\n          >\n            {node.frontmatter.title}{\" \"}\n            <span\n              css={css`\n                color: #555;\n              `}\n            >\n              — {node.frontmatter.date.replace(\",\", \"\")}\n            </span>\n          </h3>\n          {node.frontmatter.by && <p>By: {node.frontmatter.by}</p>}\n          <p>{node.excerpt}</p>\n        </Link>\n      </div>\n    ));\n  }\n}\n"],"sourceRoot":""}